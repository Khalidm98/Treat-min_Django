# Generated by Django 3.1.6 on 2021-02-18 21:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClinicSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveSmallIntegerField(default=50)),
                ('day', models.CharField(choices=[('Sat', 'Saturday'), ('Sun', 'Sunday'), ('Mon', 'Monday'), ('Tue', 'Tuesday'), ('Wed', 'Wednesday'), ('Thu', 'Thursday'), ('Fri', 'Friday')], max_length=3)),
                ('time_from', models.TimeField()),
                ('time_to', models.TimeField()),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.clinic')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/doctors/')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.clinic')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=11)),
                ('address', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/hospitals/')),
                ('clinics', models.ManyToManyField(through='treat_min.ClinicSchedule', to='treat_min.Clinic')),
                ('doctors', models.ManyToManyField(through='treat_min.ClinicSchedule', to='treat_min.Doctor')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveSmallIntegerField(default=50)),
                ('sat_from', models.TimeField(blank=True, null=True)),
                ('sat_to', models.TimeField(blank=True, null=True)),
                ('sun_from', models.TimeField(blank=True, null=True)),
                ('sun_to', models.TimeField(blank=True, null=True)),
                ('mon_from', models.TimeField(blank=True, null=True)),
                ('mon_to', models.TimeField(blank=True, null=True)),
                ('tue_from', models.TimeField(blank=True, null=True)),
                ('tue_to', models.TimeField(blank=True, null=True)),
                ('wed_from', models.TimeField(blank=True, null=True)),
                ('wed_to', models.TimeField(blank=True, null=True)),
                ('thu_from', models.TimeField(blank=True, null=True)),
                ('thu_to', models.TimeField(blank=True, null=True)),
                ('fri_from', models.TimeField(blank=True, null=True)),
                ('fri_to', models.TimeField(blank=True, null=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.hospital')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Canceled', 'Canceled'), ('Rejected', 'Rejected'), ('Waiting', 'Waiting')], default='Waiting', max_length=8)),
                ('booking_date', models.DateTimeField(blank=True, null=True)),
                ('appointment_date', models.DateTimeField(blank=True, null=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.serviceschedule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoomSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveSmallIntegerField(default=50)),
                ('sat_from', models.TimeField(blank=True, null=True)),
                ('sat_to', models.TimeField(blank=True, null=True)),
                ('sun_from', models.TimeField(blank=True, null=True)),
                ('sun_to', models.TimeField(blank=True, null=True)),
                ('mon_from', models.TimeField(blank=True, null=True)),
                ('mon_to', models.TimeField(blank=True, null=True)),
                ('tue_from', models.TimeField(blank=True, null=True)),
                ('tue_to', models.TimeField(blank=True, null=True)),
                ('wed_from', models.TimeField(blank=True, null=True)),
                ('wed_to', models.TimeField(blank=True, null=True)),
                ('thu_from', models.TimeField(blank=True, null=True)),
                ('thu_to', models.TimeField(blank=True, null=True)),
                ('fri_from', models.TimeField(blank=True, null=True)),
                ('fri_to', models.TimeField(blank=True, null=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.hospital')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoomAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Canceled', 'Canceled'), ('Rejected', 'Rejected'), ('Waiting', 'Waiting')], default='Waiting', max_length=8)),
                ('booking_date', models.DateTimeField(blank=True, null=True)),
                ('appointment_date', models.DateTimeField(blank=True, null=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.roomschedule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='hospital',
            name='rooms',
            field=models.ManyToManyField(through='treat_min.RoomSchedule', to='treat_min.Room'),
        ),
        migrations.AddField(
            model_name='hospital',
            name='services',
            field=models.ManyToManyField(through='treat_min.ServiceSchedule', to='treat_min.Service'),
        ),
        migrations.AddField(
            model_name='clinicschedule',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.doctor'),
        ),
        migrations.AddField(
            model_name='clinicschedule',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.hospital'),
        ),
        migrations.CreateModel(
            name='ClinicAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Canceled', 'Canceled'), ('Rejected', 'Rejected'), ('Waiting', 'Waiting')], default='Waiting', max_length=8)),
                ('booking_date', models.DateTimeField(blank=True, null=True)),
                ('appointment_date', models.DateTimeField(blank=True, null=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treat_min.clinicschedule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
